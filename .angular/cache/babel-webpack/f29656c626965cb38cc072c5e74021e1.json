{"ast":null,"code":"import { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../../authentication/services/auth.service\";\nexport let NetworkMemberService = /*#__PURE__*/(() => {\n  class NetworkMemberService {\n    constructor(http, authService) {\n      this.http = http;\n      this.authService = authService;\n      this.apiServer = environment.apiServer;\n    }\n\n    getNetworkMembers(network) {\n      return this.http.get(`${this.apiServer}api/v2/network/${network}/members`, {\n        headers: {\n          authorization: `${this.authService.currentToken}`\n        }\n      });\n    }\n\n    getAllMembers(requiresNotInNetwork = false) {\n      return this.http.get(`${this.apiServer}api/v2/members${requiresNotInNetwork ? '?notInNetwork=0' : ''}`, {\n        headers: {\n          authorization: `${this.authService.currentToken}`\n        }\n      });\n    }\n\n    removeFromNetwork(member, network) {\n      return this.http.post(`${this.apiServer}api/member/remove`, {\n        member,\n        networkid: network\n      }, {\n        headers: {\n          authorization: `${this.authService.currentToken}`\n        }\n      });\n    }\n\n    addToNetwork(member, network, center) {\n      return this.http.post(`${this.apiServer}api/member/add`, {\n        member,\n        networkid: network,\n        iscenter: center,\n        groupid: 0,\n        type: 0\n      }, {\n        headers: {\n          authorization: `${this.authService.currentToken}`\n        }\n      });\n    }\n\n    getMemberDevices(member) {\n      return this.http.get(`${this.apiServer}api/member/${member}/devices`, {\n        headers: {\n          authorization: `${this.authService.currentToken}`\n        }\n      });\n    }\n\n  }\n\n  NetworkMemberService.ɵfac = function NetworkMemberService_Factory(t) {\n    return new (t || NetworkMemberService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n\n  NetworkMemberService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: NetworkMemberService,\n    factory: NetworkMemberService.ɵfac,\n    providedIn: 'root'\n  });\n  return NetworkMemberService;\n})();","map":null,"metadata":{},"sourceType":"module"}