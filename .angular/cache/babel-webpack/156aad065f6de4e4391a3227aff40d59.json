{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatTableDataSource } from '@angular/material/table';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../network/network-member/network-member.service\";\n\nfunction DeviceListComponent_th_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Device Name \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DeviceListComponent_td_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const member_r10 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r10.hostname || \"-\", \" \");\n  }\n}\n\nfunction DeviceListComponent_th_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Connection Type \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DeviceListComponent_td_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const member_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r11.type === \"eth\" ? \"Wired Connection\" : \"Wireless Connection\", \" \");\n  }\n}\n\nfunction DeviceListComponent_th_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" Mac Address \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DeviceListComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const member_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r12.mac, \" \");\n  }\n}\n\nfunction DeviceListComponent_th_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 13);\n    i0.ɵɵtext(1, \" IP Adrress \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction DeviceListComponent_td_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const member_r13 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", member_r13.ip, \" \");\n  }\n}\n\nfunction DeviceListComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 15);\n  }\n}\n\nfunction DeviceListComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 16);\n  }\n}\n\nexport let DeviceListComponent = /*#__PURE__*/(() => {\n  class DeviceListComponent {\n    constructor(data, networkMemberService) {\n      this.data = data;\n      this.networkMemberService = networkMemberService;\n      this.displayedColumns = ['name', 'type', 'mac', 'ip'];\n      this.deviceDatasource = new MatTableDataSource();\n    }\n\n    ngOnInit() {\n      this.networkMemberService.getMemberDevices(this.data.id).subscribe(data => this.deviceDatasource.data = data);\n    }\n\n  }\n\n  DeviceListComponent.ɵfac = function DeviceListComponent_Factory(t) {\n    return new (t || DeviceListComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.NetworkMemberService));\n  };\n\n  DeviceListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DeviceListComponent,\n    selectors: [[\"app-device-list\"]],\n    decls: 23,\n    vars: 4,\n    consts: [[1, \"container\"], [1, \"header\"], [\"mat-button\", \"\", \"mat-dialog-close\", \"\"], [1, \"content-wrapper\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"name\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"type\"], [\"matColumnDef\", \"mac\"], [\"matColumnDef\", \"ip\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function DeviceListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"button\", 2);\n        i0.ɵɵelementStart(5, \"mat-icon\");\n        i0.ɵɵtext(6, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"table\", 4);\n        i0.ɵɵelementContainerStart(9, 5);\n        i0.ɵɵtemplate(10, DeviceListComponent_th_10_Template, 2, 0, \"th\", 6);\n        i0.ɵɵtemplate(11, DeviceListComponent_td_11_Template, 2, 1, \"td\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(12, 8);\n        i0.ɵɵtemplate(13, DeviceListComponent_th_13_Template, 2, 0, \"th\", 6);\n        i0.ɵɵtemplate(14, DeviceListComponent_td_14_Template, 2, 1, \"td\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(15, 9);\n        i0.ɵɵtemplate(16, DeviceListComponent_th_16_Template, 2, 0, \"th\", 6);\n        i0.ɵɵtemplate(17, DeviceListComponent_td_17_Template, 2, 1, \"td\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(18, 10);\n        i0.ɵɵtemplate(19, DeviceListComponent_th_19_Template, 2, 0, \"th\", 6);\n        i0.ɵɵtemplate(20, DeviceListComponent_td_20_Template, 2, 1, \"td\", 7);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(21, DeviceListComponent_tr_21_Template, 1, 0, \"tr\", 11);\n        i0.ɵɵtemplate(22, DeviceListComponent_tr_22_Template, 1, 0, \"tr\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"ID: \", ctx.data.id, \"\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"dataSource\", ctx.deviceDatasource);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    styles: [\".container[_ngcontent-%COMP%]{width:60vw}.container[_ngcontent-%COMP%]   .header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;flex-direction:row}.container[_ngcontent-%COMP%]   .content-wrapper[_ngcontent-%COMP%]{margin-top:30px}.container[_ngcontent-%COMP%]   .content-wrapper[_ngcontent-%COMP%]   table[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return DeviceListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}